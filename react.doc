React - это библиотека на основе языка программирования JavaScript, которая была разработана компанией Facebook, для того, чтобы упростить создание пользовательских интерфейсов. 

Сама концепция React заключается в том, что с его помощью можно создавать одностраничные приложения SPA (Single page application), которые ведут себя крайне отзывчиво и выглядят как самые настоящие программы, установленные на компьютере.

Они взаимодействуют с пользователем и реагируют на его действия изменением внешнего вида (User Interface). Это и есть его задача - изменять страницу без перезагрузки по требованию и контролировать память в вашем браузере.

Примеры: Браузерные мессанджеры (gmail, figma, instagram, Facebook), онлайн магазины

React построен на модульной структуре (UI компонентах). Эти компоненты должны быть компактны и независимы, мы их можем повторно использовать и легко тестировать.

Преимущества использования компонентов:
- Они самодостаточны и независимы, никак не зависят от другого кода и могут быть легко изменены или удалены.
- Они обеспечивают чистоту глобального пространства и позволяют избежать конфликтных ситуаций с одинаковыми именами переменных или функций, ведь все его данные существуют в собственной области видимости.
- Код каждый раз можно подстраивать под конкретную задачу.

Внутренности Reacta:
- Использует препроцессоры JSX - смесь HTML и JavaScript. Таким образом мы можем сразу создавать разметку и прописывать логику в одном месте.
- Внутри React-а есть алгоритм (Reconciliation Algorithm), который позволяет отслеживать, какие части приложения изменились и обновить только их, а не всё приложение.
- Технология Virtual Dom - это лёгкая копия Dom в котором мы сначала работаем, потом переносим изменения на основной Dom. («виртуальное» представление пользовательского интерфейса хранится в памяти и синхронизируется с «настоящим» DOM при помощи библиотеки, такой как ReactDOM)

---------------------------------------------------------------
React - это UI (User Interface) библиотека, он ничего не знает о работе с сервером, для этого используются другие API (application programming interface) (программный интерфейс приложения, интерфейс прикладного программирования) или библиотеки.
API - это способ взаимодействия одной программы с другой.
Fetch Api - предоставляет интерфейс JavaScript для работы с запросами и ответами HTTP. Он также предоставляет глобальный метод fetch(), который позволяет легко и логично получать ресурсы по сети асинхронно.

Fetch Api - использует промисы.

Симуляцию теста можно использовать JSONPlaceholder.